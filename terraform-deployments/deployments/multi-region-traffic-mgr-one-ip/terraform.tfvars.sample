/*
 * Copyright (c) 2021 Teradici Corporation
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

 # Specify workstations to deploy.
 # For workstation prefixes, max 5 characters to avoid name cropping.
 # Example below deploys 1 standard CentOS VM, 1 standard Windows VM, 1 graphics CentOS VM and 1 graphics Windows VM.
 
 workstations = [
    {
        prefix           = "",
        location         = "westus2",
        workstation_os   = "linux",
        vm_size          = "Standard_B2ms",
        disk_type        = "Standard_LRS",
        disk_size        = 128,
        count            = 1,
        isGFXHost        = false
    },
    {
        prefix           = "",
        location         = "westus2",
        workstation_os   = "windows",
        vm_size          = "Standard_B2ms",
        disk_type        = "Standard_LRS",
        disk_size        = 128,
        count            = 1,
        isGFXHost        = false
    },
    {
        prefix           = "",
        location         = "eastus",
        workstation_os   = "linux",
        vm_size          = "Standard_NV6",
        disk_type        = "Standard_LRS",
        disk_size        = 128,
        count            = 1,
        isGFXHost        = true
    },
    {
        prefix           = "",
        location         = "eastus",
        workstation_os   = "windows",
        vm_size          = "Standard_NV6",
        disk_type        = "Standard_LRS",
        disk_size        = 128,
        count            = 1,
        isGFXHost        = true
    }
]

# Specify the location(s) and number of connectors to create per location.
# A connector will be created in a region for each token listed
# The Domain Controller and CAS Manager VMs will be placed in the location listed first.
# e.g. This will deploy connectors in West US 2 and East US
cac_configuration = {
    "westus2" : ["cac token obtained from https://cam.teradici.com/app/connectors"]
    "eastus"  : ["cac token obtained from https://cam.teradici.com/app/connectors"]
}

# Name of resource group for deployment resources. Name must be unique.
# Leaving this commented will result in the name: 'cas_mgr_load_balancer_[random_id]'
# resource_group_name           = ""

# Prefix for DC and CAC machines.
# prefix                        = ""

# Debug flag to RDP into the DC VM.
# create_debug_rdp_access       = false

# Full path to the domain users list .csv file.
# ad_domain_users_list_file     = "~/Azure_Deployments/terraform-deployments/deployments/cas-mgr-single-connector/domain_users_list.csv"

# Active directory administrator username.
# ad_admin_username       = "cas_admin"

# Active Directory NetBIOS name
# e.g: "tera" will create the domain name "tera.dns.internal"
# active_directory_netbios_name = "tera"

# (Optional) Specify SSL certificate path for Connector
# ssl_key  = "~/clouddrive/privkey.pem"
# ssl_cert = "~/clouddrive/fullchain.pem"

# (Encryption is optional)
# To encrypt these 4 values follow section 4 of the documentation.
ad_admin_password             = "Password!234"
safe_mode_admin_password      = "Password!234"
pcoip_registration_code       = "ABCDEFGHIJKL@0123-4567-89AB-CDEF"

# Used for authentication and allows Terraform to manage resources.
application_id                = "<from section 3 step 4>"
aad_client_secret             = "<from section 3 step 5-6>"

# Only fill these when using Azure Key Vault secrets.
# Examples and tips can be found in section 4 of the documentation.
# tenant_id                     = "<from section 3 step 4>"
# key_vault_id                  = "<found in key vault properties under Resource ID>"
# ad_pass_secret_name           = "<variable name used for ad pass secret>"

# Sub domain of the traffic manager FQDN.
# e.g.: the value 'teradici' will create the FQDN 'teradici.trafficmanager.net'
traffic_manager_dns_name = "teradici"